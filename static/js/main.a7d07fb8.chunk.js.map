{"version":3,"sources":["components/EditCustomer.js","components/AddCustomer.js","components/CustomerDetails.js","components/CustomerList.js","components/AddTraining.js","components/EditTraining.js","components/TrainingList.js","components/Calender.js","App.js","serviceWorker.js","index.js"],"names":["EditCustomer","props","React","useState","bottom","state","setState","firstname","lastname","streetaddress","postcode","city","email","phone","customer","setCustomer","toggleDrawer","side","open","event","handleChange","target","name","value","editCustomer","updateCustomer","links","href","Button","onClick","color","Drawer","anchor","onClose","role","style","textAlign","List","TextField","id","margin","variant","marginBottom","label","onChange","e","AddCustomer","left","console","log","addCustomer","saveCustomer","marginLeft","marginRight","CustomerDetails","setOpen","streeraddress","handleClose","size","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","CustomerList","customers","setCustomers","useEffect","fetchCustomers","fetch","then","response","json","data","content","catch","err","error","link","method","headers","body","JSON","stringify","res","columns","Header","accessor","filterable","sortable","Cell","row","original","window","confirm","className","Grid","container","paddingTop","item","align","newCustomer","moment","require","AddTraining","date","Date","duration","activity","training","setTraining","open1","setOpen1","handleClickOpen","addTraining","format","saveTraining","type","map","ListItem","button","alert","key","ListItemAvatar","Avatar","ListItemText","primary","EditTraining","editTraining","toISOString","updateTraining","TrainingList","trainings","setTrainings","fetchTrainings","formattedTrainigs","newTraining","Calender","formattedTrainings","table","defaultView","plugins","dayGridPlugin","height","aspectRatio","events","title","App","theme","useTheme","mobileOpen","setMobileOpen","handleDrawerToggle","drawer","width","Divider","to","component","Link","marginTop","AppBar","position","Toolbar","IconButton","aria-label","edge","Typography","noWrap","Hidden","smUp","implementation","direction","ModalProps","keepMounted","exact","path","render","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a7d07fb8.chunk.js","sourcesContent":["import React from 'react';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport TextField from '@material-ui/core/TextField';\nimport '../App.css';\n\nconst EditCustomer = (props) => {\n  const [state, setState] = React.useState({\n    bottom: false,\n  });\n  const [customer, setCustomer] = React.useState(\n    {\n      firstname: '', lastname: '', streetaddress: '', postcode: '', city: '', email: '', phone: ''\n    }\n  )\n\n  const toggleDrawer = (side, open) => event => {\n    setState({ ...state, [side]: open });\n};\n\n  const handleClickOpen = () => {\n    setState({ ...state, 'bottom': true });\n    setCustomer({\n      firstname: props.customer.firstname,\n      lastname: props.customer.lastname,\n      streetaddress: props.customer.streetaddress,\n      postcode: props.customer.postcode,\n      city: props.customer.city, \n      email: props.customer.email,\n      phone: props.customer.phone\n    })\n      };\n\n  const handleChange = (event) => {\n    setCustomer({ ...customer, [event.target.name]: event.target.value })\n  }\n\n  const editCustomer = () => {\n    props.updateCustomer(customer, props.customer.links[0].href);\n    setState({ ...state, 'bottom': false });\n  }\n\n  const fullList = side => (\n    <div\n      role=\"presentation\"\n      style={{ textAlign: 'center' }}\n    >\n    <h2>Edit customers info</h2>\n      <List>\n        <TextField\n          id=\"outlined-basic\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          style={{ marginBottom: 15 }}\n          label=\"Firstname\"\n          onChange={e => handleChange(e)}\n          name=\"firstname\"\n          value={customer.firstname}\n        />\n        <TextField\n          id=\"outlined-basic\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          style={{ marginBottom: 15 }}\n          label=\"Lastname\"\n          onChange={e => handleChange(e)}\n          name=\"lastname\"\n          value={customer.lastname}\n        />\n        <TextField\n          id=\"outlined-basic\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          style={{ marginBottom: 15 }}\n          label=\"Address\"\n          onChange={e => handleChange(e)}\n          name=\"streetaddress\"\n          value={customer.streetaddress}\n        />\n        <TextField\n          id=\"outlined-basic\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          style={{ marginBottom: 15 }}\n          label=\"Postcode\"\n          onChange={e => handleChange(e)}\n          name=\"postcode\"\n          value={customer.postcode}\n        />\n        <TextField\n          id=\"outlined-basic\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          style={{ marginBottom: 15 }}\n          label=\"City\"\n          onChange={e => handleChange(e)}\n          name=\"city\"\n          value={customer.city}\n        />\n        <TextField\n          id=\"outlined-basic\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          style={{ marginBottom: 15 }}\n          label=\"Email\"\n          onChange={e => handleChange(e)}\n          name=\"email\"\n          value={customer.email}\n        />\n        <TextField\n          id=\"outlined-basic\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          style={{ marginBottom: 15 }}\n          label=\"Phone\"\n          onChange={e => handleChange(e)}\n          name=\"phone\"\n          value={customer.phone}\n        />\n      </List>\n      <Button onClick={toggleDrawer('bottom', false)} color=\"primary\">\n        Cancel\n      </Button>\n      <Button onClick={editCustomer} color=\"primary\">\n        Save\n      </Button>\n    </div>\n  );\n\n  return (\n    <div>\n      <Button onClick={handleClickOpen} color=\"primary\">Edit</Button>\n      <Drawer anchor=\"bottom\" open={state.bottom} onClose={toggleDrawer('bottom', false)}>\n        {fullList('bottom')}\n      </Drawer>\n    </div>\n  );\n};\n\nexport default EditCustomer;","import React from 'react';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport '../App.css';\n\nconst AddCustomer = (props) => {\n    const [state, setState] = React.useState({\n        left: false,\n    });\n    const [customer, setCustomer] = React.useState(\n        {\n            firstname: '', lastname: '', streetaddress: '', postcode: '', city: '', email: '', phone: ''\n        }\n    )\n\n    const toggleDrawer = (side, open) => event => {\n        setState({ ...state, [side]: open });\n    };\n\n    const handleChange = (event) => {\n        setCustomer({...customer, [event.target.name]: event.target.value})\n        console.log(customer);\n    }\n\n    const addCustomer = () => {\n        props.saveCustomer(customer);\n        setState({ ...state, 'left': false });    }\n\n    const fullList = side => (\n        <div\n            role=\"presentation\"\n            style={{ textAlign: 'center', marginLeft: 20, marginRight: 20 }}\n        >\n                <h2>Add new customer</h2>\n                <TextField\n                    id=\"outlined-basic\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    style={{marginBottom: 15}}\n                    label=\"Firstname\"\n                    onChange={e => handleChange(e)}\n                    name=\"firstname\" \n                    value={customer.firstname}\n                /> <br/>\n                <TextField\n                    id=\"outlined-basic\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    style={{marginBottom: 15}}\n                    label=\"Lastname\"\n                    onChange={e => handleChange(e)}\n                    name=\"lastname\"\n                    value={customer.lastname}\n                /> <br/>\n                <TextField\n                    id=\"outlined-basic\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    style={{marginBottom: 15}}\n                    label=\"Address\"\n                    onChange={e => handleChange(e)}\n                    name=\"streetaddress\" \n                    value={customer.streetaddress}\n                /> <br/>\n                <TextField\n                    id=\"outlined-basic\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    style={{marginBottom: 15}}\n                    label=\"Postcode\"\n                    onChange={e => handleChange(e)}\n                    name=\"postcode\" \n                    value={customer.postcode}\n                /> <br/>\n                <TextField\n                    id=\"outlined-basic\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    style={{marginBottom: 15}}\n                    label=\"City\"\n                    onChange={e => handleChange(e)}\n                    name=\"city\" \n                    value={customer.city}\n                /> <br/>\n                <TextField\n                    id=\"outlined-basic\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    style={{marginBottom: 15}}\n                    label=\"Email\"\n                    onChange={e => handleChange(e)}\n                    name=\"email\" \n                    value={customer.email}\n                /> <br/>\n                <TextField\n                    id=\"outlined-basic\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    style={{marginBottom: 15}}\n                    label=\"Phone\"\n                    onChange={e => handleChange(e)}\n                    name=\"phone\" \n                    value={customer.phone}\n                /> <br/>\n                <Button onClick={addCustomer} color=\"primary\" variant=\"outlined\" style={{marginRight: 10}}>\n                    Save\n                </Button>\n                <Button onClick={toggleDrawer('left', false)} color=\"secondary\" variant=\"outlined\">\n                    Cancel\n                </Button>\n        </div>\n    );\n\n    return (\n        <div>\n            <Button variant=\"outlined\" color=\"primary\" onClick={toggleDrawer('left', true)} style={{marginBottom: 20, marginLeft: 35}}>\n                Add Customer\n            </Button>\n            <Drawer anchor=\"left\" open={state.left} onClose={toggleDrawer('left', false)}>\n                {fullList('left')}\n            </Drawer>\n        </div>\n    );\n};\n\nexport default AddCustomer;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst CustomerDetails = (props) => {\n    const [open, setOpen] = React.useState(false);\n    const [customer, setCustomer] = React.useState(\n        {\n            streeraddress: '', postcode: '', city: '', email: '', phone: ''\n        }\n\n    )\n\n    const handleClickOpen = () => {\n        setCustomer({streetaddress: props.customer.streetaddress,\n                postcode: props.customer.postcode,\n                city: props.customer.city,\n                email: props.customer.email,\n                phone: props.customer.phone\n                })\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <div>\n            <Button size=\"small\" color=\"primary\" onClick={handleClickOpen}>\n                Details\n            </Button>\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Details</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                       <b>Address:</b> {customer.streetaddress}<br/>\n                       <b>Postcode:</b> {customer.postcode}<br/>\n                       <b>City:</b> {customer.city}<br/>\n                       <b>Email:</b> {customer.email}<br/>\n                       <b>Phone: </b> {customer.phone}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n};\n\nexport default CustomerDetails;","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport ReactTable from 'react-table';\nimport EditCustomer from './EditCustomer';\nimport AddCustomer from './AddCustomer';\nimport 'react-table/react-table.css';\nimport CustomerDetails from './CustomerDetails';\nimport Button from '@material-ui/core/Button';\n\nconst CustomerList = () => {\n    const [customers, setCustomers] = React.useState([]);\n\n\n    React.useEffect(() => {\n        fetchCustomers();\n    }, [])\n\n    const fetchCustomers = () => {\n        fetch('https://customerrest.herokuapp.com/api/customers')\n            .then(response => response.json()\n                .then(data => setCustomers(data.content))\n                .catch(err => console.error(err))\n            )\n    }\n\n    const saveCustomer = (newCustomer) => {\n        fetch('https://customerrest.herokuapp.com/api/customers',\n            {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(newCustomer)\n            }\n        )\n            .then(res => fetchCustomers())\n            .catch(err => console.error(err))\n    }\n\n    const editCustomer = (customer, link) => {\n        fetch(link, {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(customer)\n        })\n            .then(res => fetchCustomers())\n            .catch(err => console.error(err))\n\n    }\n\n    const deleteCustomer = (link) => {\n        if (window.confirm('Are you sure?')) {\n                fetch(link, { method: 'DELETE' })\n                .then(res => fetchCustomers())\n                .catch(err => console.error(err))\n        }\n    }\n        \n    const columns = [\n        {\n            Header: <b>Firstname</b>,\n            accessor: 'firstname',\n        },\n        {\n            Header: <b>Lastname</b>,\n            accessor: 'lastname',\n        },\n        {\n            filterable: false,\n            sortable: false,\n            Cell: row => <EditCustomer customer={row.original} updateCustomer={editCustomer}/>\n        },\n        {\n            filterable: false,\n            sortable: false,\n            Cell: row => <CustomerDetails customer={row.original}/>\n        },\n        {\n            accessor: 'links[0].href',\n            filterable: false,\n            sortable: false,\n            Cell: ({ value }) => <Button size=\"small\" color=\"secondary\" onClick={() => deleteCustomer(value)}>Delete</Button>\n        }\n\n    ]\n\n    return (\n        <div className=\"customers\">\n            <Grid container>\n                <Grid style={{paddingTop: 11}}  item>\n                </Grid>\n            </Grid>\n            <h1 align=\"left\">Customers</h1>\n            <div align=\"left\">\n            <AddCustomer saveCustomer={saveCustomer}/>\n            </div>\n            <ReactTable\n                data={customers}\n                columns={columns}\n                filterable={true}\n                />\n        </div>\n    );\n}\n\nexport default CustomerList;","import React from 'react';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport PersonIcon from '@material-ui/icons/Person';\nimport '../App.css';\n\nvar moment = require('moment');\n\nconst AddTraining = (props) => {\n    const [state, setState] = React.useState({\n        left: false,\n    });\n    const [training, setTraining] = React.useState(\n        {\n            date: new Date(), duration: '', activity: '', customer: ''\n        }\n    )\n    const [open1, setOpen1] = React.useState(false);\n    const [customers, setCustomers] = React.useState([]);\n\n    const fetchCustomers = () => {\n        fetch('https://customerrest.herokuapp.com/api/customers')\n            .then(response => response.json()\n                .then(data => setCustomers(data.content))\n                .catch(err => console.error(err))\n            )\n    }\n\n    const toggleDrawer = (side, open) => event => {\n        setState({ ...state, [side]: open });\n    };\n\n    const handleChange = (event) => {\n        setTraining({ ...training, [event.target.name]: event.target.value })\n    }\n\n    const handleClickOpen = () => {\n        setOpen1(true);\n        fetchCustomers();\n    };\n\n    const handleClose = value => {\n        setOpen1(false);\n    };\n\n    const handleListItemClick = value => {\n        setTraining({...training, customer: value.links[0].href })\n        alert('Added customer ' + value.firstname + ' ' + value.lastname + ' to this training');\n        handleClose();\n    };\n\n    const addTraining = () => {\n        training.date = moment(training.date).format();\n        props.saveTraining(training);\n        setState({ ...state, 'left': false });\n    }\n\n    const fullList = side => (\n        <div\n            role=\"presentation\"\n            style={{ textAlign: 'center', marginLeft: 20, marginRight: 20 }}\n        >\n        <h2>Add new training</h2>\n            <TextField\n                id=\"outlined-basic\"\n                type=\"datetime-local\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                style={{ marginBottom: 15 }}\n                onChange={e => handleChange(e)}\n                name=\"date\"\n                value={training.date}\n            /> <br />\n            <TextField\n                id=\"outlined-basic\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                style={{ marginBottom: 15 }}\n                label=\"Duration (min)\"\n                onChange={e => handleChange(e)}\n                name=\"duration\"\n                value={training.duration}\n            /> <br />\n            <TextField\n                id=\"outlined-basic\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                style={{ marginBottom: 15 }}\n                label=\"Activity\"\n                onChange={e => handleChange(e)}\n                name=\"activity\"\n                value={training.activity}\n            /> <br />\n            <br />\n            <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n                Add customer to this training\n            </Button> <br />\n            <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open1}>\n                <DialogTitle id=\"simple-dialog-title\">Customers</DialogTitle>\n                <List>\n                    {customers.map(customer => (\n                    <ListItem button onClick={() => handleListItemClick(customer)} key={customer}>\n                    <ListItemAvatar>\n                        <Avatar>\n                            <PersonIcon/>\n                        </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary={customer.firstname + \" \" + customer.lastname} />\n                    </ListItem>\n                    ))}\n                </List>\n            </Dialog><br />\n            <Button onClick={addTraining} color=\"primary\" variant=\"outlined\" style={{ marginRight: 10 }}>\n                Save\n                </Button>\n            <Button onClick={toggleDrawer('left', false)} color=\"secondary\" variant=\"outlined\">\n                Cancel\n                </Button>\n        </div>\n    );\n\n    return (\n        <div>\n            <Button variant=\"outlined\" color=\"primary\" onClick={toggleDrawer('left', true)} style={{ marginBottom: 20, marginLeft: 35 }}>\n                Add Training\n            </Button>\n            <Drawer anchor=\"left\" open={state.left} onClose={toggleDrawer('left', false)}>\n                {fullList('left')}\n            </Drawer>\n        </div>\n    );\n};\n\nexport default AddTraining;","import React from 'react';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport PersonIcon from '@material-ui/icons/Person';\nimport '../App.css';\nvar moment = require('moment');\n\nconst EditTraining = (props) => {\n\n    const [state, setState] = React.useState({\n        bottom: false,\n      });\n      const [open1, setOpen1] = React.useState(false);\n      const [training, setTraining] = React.useState(\n        {\n          date: new Date(), duration: '', activity: '', customer: ''\n        }\n      )\n    \n      const toggleDrawer = (side, open) => event => {\n        setState({ ...state, [side]: open });\n    };\n\n    const [customers, setCustomers] = React.useState([]);\n\n    const fetchCustomers = () => {\n        fetch('https://customerrest.herokuapp.com/api/customers')\n            .then(response => response.json()\n                .then(data => setCustomers(data.content))\n                .catch(err => console.error(err))\n            )\n    }\n\n    const handleListItemClick = value => {\n        setTraining({...training, customer: value.links[0].href })\n        alert('Added customer ' + value.firstname + ' ' + value.lastname + ' to this training');\n        handleClose();\n    };\n\n    const handleClose = value => {\n        setOpen1(false);\n    };\n    \n      const handleClickOpen = () => {\n        setState({ ...state, 'bottom': true });\n        setTraining({\n          date: props.training.date,\n          duration: props.training.duration,\n          activity: props.training.activity,\n          customer: props.training.customer,\n        })\n        fetchCustomers();\n          };\n    \n    \n      const handleChange = (event) => {\n        setTraining({ ...training, [event.target.name]: event.target.value })\n      }\n    \n      const editTraining = () => {\n        training.date = moment(training.date).toISOString();\n        props.updateTraining(training, props.training.href);\n        setState({ ...state, 'bottom': false });\n      }\n    \n      const fullList = side => (\n        <div\n          role=\"presentation\"\n          style={{ textAlign: 'center' }}\n        >\n        <h2>Edit trainings info</h2>\n          <List>\n            <TextField\n              id=\"outlined-basic\"\n              margin=\"normal\"\n              type=\"datetime-local\"\n              variant=\"outlined\"\n              style={{ marginBottom: 15 }}\n              label=\"Date\"\n              onChange={e => handleChange(e)}\n              name=\"date\"\n              value={training.date}\n            />\n            <TextField\n              id=\"outlined-basic\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              style={{ marginBottom: 15 }}\n              label=\"Duration\"\n              onChange={e => handleChange(e)}\n              name=\"duration\"\n              value={training.duration}\n            />\n            <TextField\n              id=\"outlined-basic\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              style={{ marginBottom: 15 }}\n              label=\"Activity\"\n              onChange={e => handleChange(e)}\n              name=\"activity\"\n              value={training.activity}\n            />\n            <Button variant=\"outlined\" color=\"primary\" onClick={() => setOpen1(true)}>\n                Add customer to this training\n            </Button> <br />\n            <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open1}>\n                <DialogTitle id=\"simple-dialog-title\">Customers</DialogTitle>\n                <List>\n                    {customers.map(customer => (\n                    <ListItem button onClick={() => handleListItemClick(customer)} key={customer}>\n                    <ListItemAvatar>\n                        <Avatar>\n                            <PersonIcon/>\n                        </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary={customer.firstname + \" \" + customer.lastname} />\n                    </ListItem>\n                    ))}\n                </List>\n            </Dialog><br />\n          </List>\n          <Button onClick={toggleDrawer('bottom', false)} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={editTraining} color=\"primary\">\n            Save\n          </Button>\n        </div>\n      )\n    return (\n\n        <div>\n            <Button onClick={handleClickOpen} color=\"primary\">Edit</Button>\n            <Drawer anchor=\"bottom\" open={state.bottom} onClose={toggleDrawer('bottom', false)}>\n                {fullList('bottom')}\n            </Drawer>\n        </div>\n\n    );\n};\n\nexport default EditTraining;","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport ReactTable from 'react-table';\nimport Button from '@material-ui/core/Button';\nimport AddTraining from '../components/AddTraining';\nimport EditTraining from '../components/EditTraining';\nimport 'react-table/react-table.css';\nvar moment = require('moment');\n\nconst TrainingList = (props) => {\n    const [trainings, setTrainings] = React.useState([]);\n\n    React.useEffect(() => {\n        fetchTrainings();\n    }, [])\n\n    const fetchTrainings = () => {\n        fetch('https://customerrest.herokuapp.com/api/trainings')\n            .then(response => response.json()\n                .then(data => {\n                    const formattedTrainigs = data.content.map(item => {\n                        const container = {};\n                        container.date = moment(item.date).format('YYYY-MM-DD-LT')\n                        container.duration = item.duration;\n                        container.activity = item.activity;\n                        container.href = item.links[0].href;\n                        return container;\n                    });\n                    setTrainings(formattedTrainigs);\n                }\n                )\n                .catch(err => console.error(err))\n            )\n    }\n\n    const editTraining = (training, link) => {\n        fetch(link, {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(training)\n        })\n            .then(res => fetchTrainings())\n            .catch(err => console.error(err))\n\n    }\n\n    const deleteTraining = (link) => {\n        console.log(link);\n        if (window.confirm('Are you sure?')) {\n            fetch(link, { method: 'DELETE' })\n                .then(res => fetchTrainings())\n                .catch(err => console.error(err))\n        }\n    }\n\n    const saveTraining = (newTraining) => {\n        fetch('https://customerrest.herokuapp.com/api/trainings',\n            {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(newTraining)\n            }\n        )\n            .then(res => fetchTrainings())\n            .catch(err => console.error(err))\n    }\n\n\n    const columns = [\n        {\n            Header: 'Date',\n            accessor: 'date'\n\n        },\n        {\n            Header: 'Duration (min)',\n            accessor: 'duration'\n        },\n        {\n            Header: 'Activity',\n            accessor: 'activity'\n        },\n        {\n            filterable: false,\n            sortable: false,\n            Cell: row => <EditTraining training={row.original} updateTraining={editTraining}/>\n        },\n        {\n            accessor: 'href',\n            filterable: false,\n            sortable: false,\n            Cell: ({ value }) => <Button size=\"small\" color=\"secondary\" onClick={() => deleteTraining(value)}>Delete</Button>\n        }\n    ]\n    \n    return (\n        <div>\n            <Grid container>\n                <Grid style={{ paddingTop: 11 }} item>\n                </Grid>\n            </Grid>\n            <h1 align=\"left\">Trainings</h1>\n            <div align=\"left\">\n            <AddTraining saveTraining={saveTraining}/>\n            </div>\n            <ReactTable\n                data={trainings}\n                columns={columns}\n                filterable={true}\n            />\n        </div>\n    );\n};\n\nexport default TrainingList;","import React from 'react';\nimport FullCalender from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport '../App.css';\nvar moment = require('moment');\n\n\nconst Calender = (props) => {\n    const [trainings, setTrainings] = React.useState([])\n\n    React.useEffect(() => {\n        fetchTrainings();\n    }, [])\n\n    const fetchTrainings = () => {\n        fetch('https://customerrest.herokuapp.com/api/trainings')\n            .then(response => response.json()\n            .then(data => {\n                const formattedTrainings = data.content.map(item => {\n                    const container = {};\n                    container.date = moment(item.date).format('YYYY-MM-DD')\n                    container.duration = item.duration;\n                    container.activity = item.activity;\n                    return container;\n                });\n                console.table(formattedTrainings);\n                setTrainings(formattedTrainings);\n            }\n                )\n            .catch(err => console.error(err))\n            )}\n\n\n    return (\n        <div>\n            <FullCalender\n                defaultView=\"dayGridMonth\"\n                plugins={[ dayGridPlugin ]}\n                height={700}\n                aspectRatio={1}\n                events={trainings.map(item => {\n                    const container = {};\n                    container.date = item.date;\n                    container.title = item.activity;\n                    return container;\n                })}\n            />\n        </div>\n    );\n};\n\nexport default Calender;","import React from 'react';\nimport './App.css';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport CustomerList from './components/CustomerList';\nimport TrainingList from './components/TrainingList';\nimport Calender from './components/Calender';\nimport { Route, BrowserRouter, Switch, Link } from 'react-router-dom';\nimport { Button } from '@material-ui/core';\nimport Divider from '@material-ui/core/Divider';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { useTheme } from '@material-ui/core/styles';\n\nfunction App(props) {\n  const { container } = props;\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const drawer = (\n    <div style={{width: 200}}>\n      <div />\n      <Divider />\n      <Button to=\"/\" onClick={handleDrawerToggle} component={Link} style={{ color: \"blue\", marginBottom: 10, marginLeft: 35, marginTop: 70 }}>Customers</Button><br />\n      <Divider />\n      <Button to=\"/trainings\" onClick={handleDrawerToggle} component={Link} style={{ color: \"blue\", marginBottom: 10, marginTop: 10,  marginLeft: 40 }}>Trainings</Button><br />\n      <Divider />\n      <Button to=\"/calender\" onClick={handleDrawerToggle} component={Link} style={{ color: \"blue\", marginLeft: 40, marginTop: 10 }}>Calender</Button>\n    </div>\n  );\n\n  return (\n    <div className=\"App\">\n      <AppBar position=\"fixed\">\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            Customers and Trainings Database\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <BrowserRouter>\n        <div>\n          <Hidden smUp implementation=\"css\">\n            <Drawer\n              container={container}\n              variant=\"temporary\"\n              anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n              open={mobileOpen}\n              onClose={handleDrawerToggle}\n              ModalProps={{\n                keepMounted: true, // Better open performance on mobile.\n              }}\n              \n            >\n              {drawer}\n            </Drawer>\n          </Hidden>\n          <div style={{ textAlign: \"center\", marginTop: 100 }}>\n            <Switch>\n              <Route exact path=\"/\" component={CustomerList} />\n              <Route path=\"/trainings\" component={TrainingList} />\n              <Route path=\"/calender\" component={Calender} />\n              <Route render={() => <h1>Page not found</h1>} />\n            </Switch>\n          </div>\n        </div>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}